cp while.py while-ss
chmod +x while-ss
1..51
ok 1 custom-1
ok 2 custom-2
ok 3 custom-3
ok 4 custom-4
ok 5 custom-5
ok 6 easy-1
ok 7 easy-2
ok 8 easy-3
ok 9 easy-4
ok 10 easy-5
ok 11 easy-6
ok 12 easy-7
ok 13 easy-8
ok 14 easy-9
ok 15 easy-10
ok 16 easy-12
ok 17 easy-13
not ok 18 easy-14
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/easy.bats, line 67)
#   `check '{ a := 1 ; b := 2 } ; c := 3' '⇒ skip; b := 2; c := 3, {a → 1}' failed
# { a := 1 ; b := 2 } ; c := 3 = ⇒ skip; b := 2; c := 3, {a → 1}
# ⇒ b := 2; c := 3, {a → 1}
# ⇒ skip; c := 3, {a → 1, b → 2}
# ⇒ c := 3, {a → 1, b → 2}
# ⇒ skip, {a → 1, b → 2, c → 3}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip, {a → 1, b → 2}
# ⇒ skip, {a → 1, b → 2, c → 3}
not ok 19 easy-15
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/easy.bats, line 75)
#   `check 'z := 26 ; { a := 1 ; b := 2 ; c := 3 }' '⇒ skip; a := 1; b := 2; c := 3, {z → 26}' failed
# z := 26 ; { a := 1 ; b := 2 ; c := 3 } = ⇒ skip; a := 1; b := 2; c := 3, {z → 26}
# ⇒ a := 1; b := 2; c := 3, {z → 26}
# ⇒ skip; b := 2; c := 3, {a → 1, z → 26}
# ⇒ b := 2; c := 3, {a → 1, z → 26}
# ⇒ skip; c := 3, {a → 1, b → 2, z → 26}
# ⇒ c := 3, {a → 1, b → 2, z → 26}
# ⇒ skip, {a → 1, b → 2, c → 3, z → 26}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip; ⇒ skip, {a → 1, b → 2, z → 26}
# ⇒ skip, {a → 1, b → 2, c → 3, z → 26}
# ⇒ skip; ⇒ skip; ⇒ skip, {a → 1, b → 2, c → 3, z → 26}
# ⇒ skip, {a → 1, b → 2, c → 3, z → 26}
# ⇒ skip, {a → 1, b → 2, c → 3, z → 26}
ok 20 easy-16
ok 21 easy-17
ok 22 hard-1
ok 23 hard-2
ok 24 hard-3
ok 25 hard-4
ok 26 hard-5
ok 27 hard-6
ok 28 hard-7
ok 29 hard-8
ok 30 hard-9
ok 31 hard-10
ok 32 hard-11
ok 33 hard-12
not ok 34 hard-13
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/hard.bats, line 64)
#   `check 'if ( ¬ true ) then skip else x := z * -1' '⇒ x := (z*-1), {}' failed
# if ( ¬ true ) then skip else x := z * -1 = ⇒ x := (z*-1), {}
# ⇒ skip, {x → 0}, your code outputs Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 249, in visit_If_node
#     print(self.show(node.false_case))
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 76, in no_show_func
#     raise Exception(f'No show_{type(node).__name__} func defined')
# Exception: No show_type func defined
ok 35 hard-14
not ok 36 hard-15
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/hard.bats, line 73)
#   `check 'x := 3 * f0 ; z := 2 * x' '⇒ skip; z := (2*x), {x → 0}' failed
# x := 3 * f0 ; z := 2 * x = ⇒ skip; z := (2*x), {x → 0}
# ⇒ z := (2*x), {x → 0}
# ⇒ skip, {x → 0, z → 0}, your code outputs ⇒ skip; ⇒ skip, {x → 0, z → 0}
not ok 37 hard-16
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/hard.bats, line 79)
#   `check 'x := C - 0 ; y := g' '⇒ skip; y := g, {x → 0}' failed
# x := C - 0 ; y := g = ⇒ skip; y := g, {x → 0}
# ⇒ y := g, {x → 0}
# ⇒ skip, {x → 0, y → 0}, your code outputs ⇒ skip; ⇒ skip, {x → 0, y → 0}
ok 38 hard-17
ok 39 hard-18
ok 40 hard-19
ok 41 hard-20
not ok 42 medium-1
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 4)
#   `check 'i := 5 ; fact := 1 ; while 0 < i do { fact := fact * i ; i := i - 1 }' '⇒ skip; fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → 5}' failed
# i := 5 ; fact := 1 ; while 0 < i do { fact := fact * i ; i := i - 1 } = ⇒ skip; fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → 5}
# ⇒ fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → 5}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → 5}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → 5}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → 5}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 5, i → 5}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 5, i → 5}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 5, i → 4}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 5, i → 4}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 5, i → 4}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 20, i → 4}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 20, i → 4}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 20, i → 3}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 20, i → 3}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 20, i → 3}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 60, i → 3}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 60, i → 3}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 60, i → 2}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 60, i → 2}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 60, i → 2}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 2}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 2}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 1}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 1}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 1}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 1}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 1}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 0}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 120, i → 0}
# ⇒ skip, {fact → 120, i → 0}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip, {fact → 1, i → 5}
# ⇒ skip; ⇒ skip, {fact → 5, i → 4}
# Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 101, in visit_Binary_op_node
#     return self.execute_statements(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 312, in execute_statements
#     self.show(node.right_node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 292, in show_While_node
#     print("⇒ while " + self.show(node.condition) + " do { "+ self.show(node.body) + " }, " + self.store_repr())
# TypeError: can only concatenate str (not "NoneType") to str
not ok 43 medium-2
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 37)
#   `check 'i := 3 ; fact := 1 ; while 0 < i do { fact := fact * i ; i := i - 1 }' '⇒ skip; fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → 3}' failed
# i := 3 ; fact := 1 ; while 0 < i do { fact := fact * i ; i := i - 1 } = ⇒ skip; fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → 3}
# ⇒ fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → 3}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → 3}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → 3}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → 3}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 3, i → 3}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 3, i → 3}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 3, i → 2}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 3, i → 2}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 3, i → 2}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 2}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 2}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 1}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 1}
# ⇒ fact := (fact*i); i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 1}
# ⇒ skip; i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 1}
# ⇒ i := (i-1); while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 1}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 0}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 6, i → 0}
# ⇒ skip, {fact → 6, i → 0}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip, {fact → 1, i → 3}
# ⇒ skip; ⇒ skip, {fact → 3, i → 2}
# Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 101, in visit_Binary_op_node
#     return self.execute_statements(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 312, in execute_statements
#     self.show(node.right_node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 292, in show_While_node
#     print("⇒ while " + self.show(node.condition) + " do { "+ self.show(node.body) + " }, " + self.store_repr())
# TypeError: can only concatenate str (not "NoneType") to str
not ok 44 medium-3
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 60)
#   `check 'i := -1 ; fact := 1 ; while 0 < i do { fact := fact * i ; i := i - 1 }' '⇒ skip; fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → -1}' failed
# i := -1 ; fact := 1 ; while 0 < i do { fact := fact * i ; i := i - 1 } = ⇒ skip; fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → -1}
# ⇒ fact := 1; while (0<i) do { fact := (fact*i); i := (i-1) }, {i → -1}
# ⇒ skip; while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → -1}
# ⇒ while (0<i) do { fact := (fact*i); i := (i-1) }, {fact → 1, i → -1}
# ⇒ skip, {fact → 1, i → -1}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip, {fact → 1, i → -1}
# ⇒ skip; ⇒ skip, {fact → -1, i → -2}
# Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 101, in visit_Binary_op_node
#     return self.execute_statements(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 312, in execute_statements
#     self.show(node.right_node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 292, in show_While_node
#     print("⇒ while " + self.show(node.condition) + " do { "+ self.show(node.body) + " }, " + self.store_repr())
# TypeError: can only concatenate str (not "NoneType") to str
not ok 45 medium-4
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 68)
#   `check 'a := 98 ; b := 76 ; while ¬ ( a = b ) do { if a < b then b := b - a else a := a - b }' '⇒ skip; b := 76; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98}' failed
# a := 98 ; b := 76 ; while ¬ ( a = b ) do { if a < b then b := b - a else a := a - b } = ⇒ skip; b := 76; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98}
# ⇒ b := 76; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 76}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 76}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 76}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 76}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 76}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 76}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 76}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 76}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 54}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 54}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 54}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 54}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 32}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 32}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 32}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 32}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 10}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 10}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 10}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 10}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 10}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 10}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 10}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 10}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 10}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 10}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 10}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 10}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 8}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 8}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 8}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 8}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 6}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 6}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 6}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 6}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 4}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 4}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 4}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 4}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 2}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 2}
# ⇒ skip, {a → 2, b → 2}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip, {a → 98, b → 76}
# if (a<b) then { b := (b-a) } else { a := (a-b) }, {a → 98, b → 76}
# Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 101, in visit_Binary_op_node
#     return self.execute_statements(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 312, in execute_statements
#     self.show(node.right_node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 292, in show_While_node
#     print("⇒ while " + self.show(node.condition) + " do { "+ self.show(node.body) + " }, " + self.store_repr())
# TypeError: can only concatenate str (not "NoneType") to str
not ok 46 medium-5
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 116)
#   `check 'a := 369 ; b := 1107 ; while ¬ ( a = b ) do { if a < b then b := b - a else a := a - b }' '⇒ skip; b := 1107; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369}' failed
# a := 369 ; b := 1107 ; while ¬ ( a = b ) do { if a < b then b := b - a else a := a - b } = ⇒ skip; b := 1107; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369}
# ⇒ b := 1107; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1107}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1107}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1107}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1107}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 738}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 738}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 738}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 738}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 369}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 369}
# ⇒ skip, {a → 369, b → 369}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip, {a → 369, b → 1107}
# if (a<b) then { b := (b-a) } else { a := (a-b) }, {a → 369, b → 1107}
# Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 101, in visit_Binary_op_node
#     return self.execute_statements(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 312, in execute_statements
#     self.show(node.right_node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 292, in show_While_node
#     print("⇒ while " + self.show(node.condition) + " do { "+ self.show(node.body) + " }, " + self.store_repr())
# TypeError: can only concatenate str (not "NoneType") to str
not ok 47 medium-6
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 132)
#   `check 'a := 369 ; b := 1108 ; while ¬ ( a = b ) do { if a < b then b := b - a else a := a - b }' '⇒ skip; b := 1108; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369}' failed
# a := 369 ; b := 1108 ; while ¬ ( a = b ) do { if a < b then b := b - a else a := a - b } = ⇒ skip; b := 1108; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369}
# ⇒ b := 1108; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1108}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1108}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1108}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1108}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 739}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 739}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 739}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 739}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 370}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 370}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 370}
# ⇒ b := (b-a); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 370}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 369, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 368, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 368, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 368, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 368, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 367, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 367, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 367, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 367, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 366, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 366, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 366, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 366, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 365, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 365, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 365, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 365, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 364, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 364, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 364, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 364, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 363, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 363, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 363, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 363, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 362, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 362, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 362, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 362, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 361, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 361, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 361, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 361, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 360, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 360, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 360, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 360, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 359, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 359, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 359, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 359, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 358, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 358, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 358, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 358, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 357, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 357, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 357, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 357, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 356, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 356, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 356, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 356, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 355, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 355, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 355, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 355, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 354, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 354, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 354, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 354, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 353, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 353, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 353, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 353, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 352, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 352, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 352, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 352, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 351, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 351, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 351, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 351, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 350, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 350, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 350, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 350, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 349, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 349, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 349, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 349, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 348, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 348, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 348, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 348, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 347, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 347, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 347, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 347, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 346, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 346, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 346, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 346, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 345, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 345, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 345, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 345, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 344, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 344, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 344, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 344, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 343, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 343, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 343, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 343, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 342, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 342, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 342, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 342, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 341, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 341, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 341, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 341, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 340, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 340, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 340, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 340, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 339, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 339, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 339, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 339, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 338, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 338, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 338, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 338, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 337, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 337, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 337, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 337, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 336, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 336, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 336, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 336, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 335, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 335, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 335, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 335, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 334, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 334, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 334, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 334, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 333, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 333, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 333, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 333, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 332, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 332, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 332, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 332, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 331, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 331, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 331, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 331, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 330, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 330, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 330, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 330, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 329, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 329, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 329, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 329, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 328, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 328, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 328, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 328, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 327, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 327, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 327, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 327, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 326, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 326, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 326, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 326, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 325, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 325, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 325, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 325, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 324, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 324, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 324, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 324, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 323, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 323, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 323, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 323, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 322, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 322, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 322, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 322, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 321, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 321, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 321, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 321, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 320, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 320, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 320, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 320, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 319, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 319, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 319, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 319, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 318, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 318, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 318, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 318, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 317, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 317, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 317, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 317, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 316, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 316, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 316, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 316, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 315, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 315, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 315, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 315, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 314, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 314, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 314, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 314, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 313, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 313, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 313, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 313, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 312, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 312, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 312, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 312, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 311, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 311, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 311, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 311, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 310, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 310, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 310, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 310, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 309, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 309, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 309, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 309, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 308, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 308, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 308, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 308, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 307, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 307, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 307, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 307, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 306, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 306, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 306, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 306, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 305, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 305, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 305, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 305, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 304, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 304, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 304, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 304, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 303, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 303, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 303, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 303, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 302, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 302, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 302, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 302, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 301, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 301, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 301, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 301, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 300, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 300, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 300, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 300, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 299, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 299, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 299, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 299, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 298, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 298, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 298, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 298, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 297, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 297, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 297, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 297, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 296, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 296, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 296, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 296, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 295, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 295, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 295, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 295, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 294, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 294, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 294, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 294, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 293, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 293, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 293, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 293, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 292, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 292, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 292, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 292, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 291, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 291, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 291, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 291, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 290, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 290, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 290, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 290, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 289, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 289, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 289, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 289, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 288, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 288, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 288, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 288, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 287, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 287, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 287, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 287, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 286, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 286, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 286, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 286, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 285, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 285, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 285, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 285, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 284, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 284, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 284, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 284, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 283, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 283, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 283, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 283, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 282, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 282, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 282, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 282, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 281, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 281, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 281, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 281, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 280, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 280, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 280, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 280, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 279, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 279, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 279, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 279, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 278, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 278, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 278, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 278, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 277, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 277, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 277, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 277, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 276, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 276, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 276, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 276, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 275, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 275, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 275, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 275, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 274, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 274, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 274, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 274, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 273, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 273, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 273, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 273, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 272, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 272, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 272, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 272, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 271, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 271, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 271, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 271, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 270, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 270, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 270, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 270, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 269, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 269, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 269, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 269, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 268, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 268, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 268, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 268, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 267, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 267, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 267, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 267, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 266, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 266, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 266, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 266, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 265, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 265, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 265, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 265, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 264, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 264, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 264, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 264, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 263, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 263, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 263, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 263, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 262, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 262, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 262, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 262, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 261, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 261, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 261, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 261, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 260, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 260, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 260, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 260, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 259, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 259, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 259, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 259, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 258, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 258, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 258, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 258, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 257, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 257, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 257, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 257, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 256, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 256, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 256, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 256, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 255, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 255, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 255, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 255, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 254, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 254, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 254, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 254, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 253, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 253, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 253, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 253, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 252, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 252, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 252, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 252, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 251, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 251, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 251, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 251, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 250, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 250, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 250, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 250, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 249, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 249, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 249, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 249, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 248, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 248, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 248, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 248, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 247, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 247, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 247, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 247, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 246, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 246, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 246, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 246, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 245, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 245, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 245, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 245, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 244, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 244, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 244, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 244, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 243, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 243, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 243, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 243, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 242, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 242, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 242, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 242, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 241, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 241, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 241, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 241, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 240, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 240, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 240, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 240, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 239, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 239, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 239, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 239, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 238, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 238, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 238, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 238, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 237, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 237, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 237, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 237, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 236, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 236, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 236, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 236, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 235, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 235, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 235, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 235, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 234, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 234, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 234, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 234, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 233, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 233, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 233, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 233, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 232, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 232, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 232, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 232, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 231, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 231, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 231, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 231, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 230, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 230, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 230, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 230, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 229, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 229, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 229, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 229, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 228, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 228, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 228, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 228, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 227, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 227, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 227, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 227, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 226, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 226, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 226, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 226, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 225, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 225, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 225, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 225, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 224, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 224, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 224, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 224, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 223, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 223, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 223, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 223, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 222, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 222, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 222, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 222, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 221, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 221, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 221, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 221, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 220, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 220, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 220, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 220, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 219, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 219, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 219, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 219, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 218, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 218, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 218, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 218, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 217, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 217, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 217, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 217, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 216, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 216, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 216, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 216, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 215, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 215, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 215, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 215, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 214, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 214, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 214, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 214, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 213, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 213, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 213, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 213, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 212, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 212, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 212, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 212, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 211, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 211, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 211, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 211, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 210, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 210, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 210, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 210, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 209, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 209, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 209, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 209, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 208, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 208, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 208, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 208, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 207, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 207, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 207, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 207, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 206, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 206, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 206, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 206, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 205, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 205, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 205, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 205, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 204, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 204, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 204, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 204, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 203, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 203, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 203, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 203, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 202, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 202, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 202, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 202, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 201, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 201, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 201, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 201, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 200, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 200, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 200, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 200, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 199, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 199, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 199, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 199, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 198, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 198, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 198, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 198, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 197, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 197, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 197, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 197, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 196, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 196, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 196, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 196, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 195, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 195, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 195, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 195, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 194, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 194, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 194, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 194, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 193, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 193, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 193, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 193, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 192, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 192, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 192, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 192, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 191, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 191, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 191, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 191, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 190, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 190, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 190, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 190, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 189, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 189, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 189, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 189, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 188, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 188, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 188, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 188, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 187, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 187, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 187, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 187, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 186, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 186, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 186, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 186, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 185, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 185, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 185, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 185, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 184, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 184, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 184, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 184, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 183, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 183, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 183, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 183, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 182, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 182, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 182, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 182, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 181, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 181, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 181, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 181, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 180, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 180, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 180, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 180, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 179, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 179, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 179, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 179, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 178, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 178, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 178, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 178, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 177, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 177, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 177, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 177, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 176, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 176, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 176, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 176, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 175, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 175, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 175, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 175, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 174, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 174, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 174, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 174, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 173, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 173, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 173, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 173, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 172, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 172, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 172, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 172, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 171, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 171, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 171, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 171, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 170, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 170, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 170, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 170, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 169, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 169, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 169, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 169, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 168, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 168, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 168, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 168, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 167, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 167, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 167, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 167, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 166, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 166, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 166, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 166, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 165, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 165, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 165, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 165, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 164, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 164, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 164, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 164, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 163, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 163, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 163, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 163, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 162, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 162, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 162, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 162, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 161, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 161, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 161, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 161, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 160, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 160, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 160, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 160, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 159, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 159, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 159, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 159, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 158, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 158, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 158, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 158, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 157, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 157, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 157, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 157, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 156, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 156, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 156, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 156, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 155, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 155, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 155, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 155, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 154, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 154, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 154, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 154, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 153, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 153, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 153, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 153, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 152, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 152, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 152, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 152, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 151, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 151, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 151, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 151, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 150, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 150, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 150, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 150, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 149, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 149, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 149, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 149, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 148, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 148, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 148, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 148, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 147, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 147, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 147, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 147, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 146, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 146, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 146, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 146, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 145, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 145, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 145, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 145, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 144, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 144, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 144, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 144, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 143, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 143, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 143, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 143, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 142, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 142, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 142, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 142, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 141, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 141, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 141, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 141, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 140, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 140, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 140, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 140, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 139, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 139, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 139, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 139, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 138, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 138, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 138, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 138, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 137, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 137, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 137, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 137, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 136, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 136, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 136, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 136, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 135, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 135, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 135, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 135, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 134, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 134, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 134, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 134, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 133, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 133, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 133, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 133, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 132, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 132, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 132, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 132, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 131, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 131, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 131, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 131, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 130, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 130, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 130, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 130, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 129, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 129, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 129, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 129, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 128, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 128, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 128, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 128, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 127, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 127, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 127, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 127, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 126, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 126, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 126, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 126, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 125, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 125, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 125, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 125, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 124, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 124, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 124, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 124, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 123, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 123, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 123, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 123, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 122, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 122, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 122, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 122, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 121, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 121, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 121, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 121, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 120, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 120, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 120, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 120, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 119, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 119, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 119, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 119, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 118, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 118, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 118, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 118, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 117, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 117, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 117, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 117, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 116, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 116, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 116, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 116, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 115, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 115, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 115, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 115, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 114, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 114, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 114, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 114, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 113, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 113, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 113, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 113, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 112, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 112, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 112, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 112, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 111, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 111, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 111, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 111, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 110, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 110, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 110, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 110, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 109, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 109, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 109, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 109, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 108, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 108, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 108, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 108, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 107, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 107, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 107, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 107, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 106, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 106, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 106, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 106, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 105, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 105, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 105, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 105, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 104, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 104, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 104, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 104, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 103, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 103, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 103, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 103, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 102, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 102, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 102, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 102, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 101, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 101, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 101, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 101, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 100, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 100, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 100, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 100, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 99, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 99, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 99, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 99, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 98, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 97, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 97, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 97, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 97, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 96, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 96, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 96, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 96, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 95, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 95, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 95, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 95, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 94, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 94, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 94, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 94, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 93, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 93, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 93, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 93, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 92, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 92, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 92, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 92, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 91, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 91, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 91, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 91, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 90, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 90, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 90, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 90, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 89, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 89, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 89, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 89, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 88, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 88, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 88, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 88, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 87, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 87, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 87, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 87, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 86, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 86, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 86, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 86, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 85, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 85, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 85, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 85, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 84, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 84, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 84, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 84, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 83, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 83, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 83, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 83, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 82, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 82, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 82, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 82, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 81, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 81, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 81, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 81, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 80, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 80, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 80, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 80, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 79, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 79, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 79, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 79, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 78, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 78, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 78, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 78, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 77, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 77, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 77, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 77, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 76, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 76, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 76, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 76, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 75, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 75, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 75, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 75, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 74, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 74, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 74, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 74, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 73, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 73, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 73, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 73, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 72, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 72, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 72, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 72, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 71, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 71, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 71, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 71, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 70, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 70, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 70, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 70, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 69, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 69, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 69, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 69, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 68, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 68, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 68, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 68, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 67, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 67, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 67, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 67, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 66, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 66, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 66, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 66, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 65, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 65, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 65, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 65, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 64, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 64, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 64, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 64, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 63, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 63, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 63, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 63, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 62, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 62, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 62, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 62, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 61, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 61, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 61, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 61, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 60, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 60, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 60, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 60, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 59, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 59, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 59, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 59, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 58, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 58, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 58, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 58, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 57, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 57, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 57, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 57, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 56, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 56, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 56, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 56, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 55, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 55, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 55, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 55, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 54, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 54, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 54, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 54, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 53, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 53, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 53, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 53, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 52, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 52, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 52, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 52, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 51, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 51, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 51, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 51, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 50, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 50, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 50, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 50, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 49, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 49, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 49, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 49, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 48, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 48, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 48, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 48, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 47, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 47, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 47, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 47, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 46, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 46, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 46, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 46, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 45, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 45, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 45, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 45, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 44, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 44, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 44, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 44, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 43, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 43, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 43, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 43, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 42, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 42, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 42, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 42, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 41, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 41, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 41, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 41, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 40, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 40, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 40, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 40, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 39, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 39, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 39, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 39, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 38, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 38, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 38, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 38, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 37, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 37, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 37, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 37, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 36, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 36, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 36, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 36, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 35, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 35, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 35, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 35, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 34, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 34, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 34, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 34, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 33, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 33, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 33, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 33, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 32, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 32, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 32, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 32, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 31, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 31, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 31, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 31, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 30, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 30, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 30, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 30, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 29, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 29, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 29, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 29, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 28, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 28, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 28, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 28, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 27, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 27, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 27, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 27, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 26, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 26, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 26, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 26, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 25, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 25, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 25, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 25, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 24, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 24, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 24, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 24, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 23, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 23, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 23, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 23, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 22, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 21, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 21, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 21, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 21, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 20, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 20, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 20, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 20, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 19, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 19, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 19, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 19, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 18, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 18, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 18, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 18, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 17, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 17, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 17, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 17, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 16, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 16, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 16, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 16, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 15, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 15, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 15, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 15, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 14, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 14, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 14, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 14, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 13, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 13, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 13, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 13, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 12, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 11, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 11, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 11, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 11, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 10, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 10, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 10, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 10, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 9, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 9, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 9, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 9, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 8, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 8, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 8, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 8, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 7, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 7, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 7, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 7, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 6, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 6, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 6, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 6, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 5, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 5, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 5, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 5, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 4, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 4, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 4, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 4, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 3, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 3, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 3, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 3, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 1}
# ⇒ if (a<b) then { b := (b-a) } else { a := (a-b) }; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 1}
# ⇒ a := (a-b); while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 2, b → 1}
# ⇒ skip; while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 1, b → 1}
# ⇒ while ¬(a=b) do { if (a<b) then { b := (b-a) } else { a := (a-b) } }, {a → 1, b → 1}
# ⇒ skip, {a → 1, b → 1}, your code outputs ⇒ skip; ⇒ skip; ⇒ skip, {a → 369, b → 1108}
# if (a<b) then { b := (b-a) } else { a := (a-b) }, {a → 369, b → 1108}
# Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 101, in visit_Binary_op_node
#     return self.execute_statements(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 312, in execute_statements
#     self.show(node.right_node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 292, in show_While_node
#     print("⇒ while " + self.show(node.condition) + " do { "+ self.show(node.body) + " }, " + self.store_repr())
# TypeError: can only concatenate str (not "NoneType") to str
not ok 48 medium-7
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 1624)
#   `check 'while false do x := 1 ; if true then y := 1 else z := 1' '⇒ skip; if true then { y := 1 } else { z := 1 }, {}' failed
# while false do x := 1 ; if true then y := 1 else z := 1 = ⇒ skip; if true then { y := 1 } else { z := 1 }, {}
# ⇒ if true then { y := 1 } else { z := 1 }, {}
# ⇒ y := 1, {}
# ⇒ skip, {y → 1}, your code outputs ⇒ skip; ⇒ skip, {}
# if true then { y := 1 } else { z := 1 }, {}
# ⇒ if true then { y := 1 } else { z := 1 }, {}
# ⇒ y := 1, {}
# ⇒ skip, {y → 1}
not ok 49 medium-8
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 1631)
#   `check 'while false do x := 1 ; y := 1' '⇒ skip; y := 1, {}' failed
# while false do x := 1 ; y := 1 = ⇒ skip; y := 1, {}
# ⇒ y := 1, {}
# ⇒ skip, {y → 1}, your code outputs ⇒ skip; ⇒ skip, {}
# ⇒ skip, {y → 1}
not ok 50 medium-9
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 1637)
#   `check 'if false then kj := 12 else while false do l0 := 0' '⇒ while false do { l0 := 0 }, {}' failed
# if false then kj := 12 else while false do l0 := 0 = ⇒ while false do { l0 := 0 }, {}
# ⇒ skip, {}, your code outputs ⇒ while false do { ⇒ l0 := 0, {} }, {}
# None
# ⇒ skip, {}
not ok 51 medium-10
# (from function `check' in file tests/harness.bash, line 6,
#  in test file tests/medium.bats, line 1642)
#   `check 'if false then while true do skip else x := 2' '⇒ x := 2, {}' failed
# if false then while true do skip else x := 2 = ⇒ x := 2, {}
# ⇒ skip, {x → 2}, your code outputs Traceback (most recent call last):
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/./while-ss", line 14, in <module>
#     interpreter.interpret()
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 38, in interpret
#     return self.visit(self.ast)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 63, in visit
#     return func(node, from_loop)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 249, in visit_If_node
#     print(self.show(node.false_case))
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 72, in show
#     return func(node)
#   File "/Users/smruthipobbathi/Documents/Winter22/CSE210A/Assignments/HW4/interpreter.py", line 76, in no_show_func
#     raise Exception(f'No show_{type(node).__name__} func defined')
# Exception: No show_type func defined
